"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseStatusResponse = exports.parseApiBasicResponse = exports.parseTransactionStatus = void 0;
const chains_1 = require("./chains");
const util_1 = require("./util");
const utils_1 = require("../../utils");
const parseTransactionStatus = (data) => {
    if (!data) {
        return undefined;
    }
    const { transactionId, blockNumber, callEventStatus, callEventLog, chainData, transactionUrl } = data;
    return (0, util_1.removeEmpty)({
        transactionId,
        blockNumber,
        callEventStatus,
        callEventLog,
        chainData: (0, chains_1.parseChainData)([chainData]).pop(),
        transactionUrl
    });
};
exports.parseTransactionStatus = parseTransactionStatus;
const parseApiBasicResponse = (response) => {
    const { data, status } = response;
    let apiBasicResponse = {};
    if (status >= 400) {
        const { message, errorType } = data.errors[0];
        apiBasicResponse = (0, util_1.removeEmpty)({
            error: message,
            errorType
        });
    }
    return apiBasicResponse;
};
exports.parseApiBasicResponse = parseApiBasicResponse;
const parseStatusResponse = (response, headers) => {
    const apiBasicResponse = (0, exports.parseApiBasicResponse)(response);
    const { id, status, gasStatus, isGMPTransaction, axelarTransactionUrl, fromChain, toChain, timeSpent } = response.data;
    return (0, util_1.removeEmpty)({
        id,
        status,
        gasStatus,
        isGMPTransaction,
        axelarTransactionUrl,
        fromChain: (0, exports.parseTransactionStatus)(fromChain),
        toChain: (0, exports.parseTransactionStatus)(toChain),
        timeSpent: timeSpent,
        ...(0, utils_1.getHeaderTracker)(headers),
        ...apiBasicResponse
    });
};
exports.parseStatusResponse = parseStatusResponse;
//# sourceMappingURL=status.js.map